#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NET_2001181272_HuynhThanhPhuong_T8
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLySinhVien")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCHUONGTRINH(CHUONGTRINH instance);
    partial void UpdateCHUONGTRINH(CHUONGTRINH instance);
    partial void DeleteCHUONGTRINH(CHUONGTRINH instance);
    partial void InsertSINHVIEN(SINHVIEN instance);
    partial void UpdateSINHVIEN(SINHVIEN instance);
    partial void DeleteSINHVIEN(SINHVIEN instance);
    partial void InsertGIANGKHOA(GIANGKHOA instance);
    partial void UpdateGIANGKHOA(GIANGKHOA instance);
    partial void DeleteGIANGKHOA(GIANGKHOA instance);
    partial void InsertKETQUA(KETQUA instance);
    partial void UpdateKETQUA(KETQUA instance);
    partial void DeleteKETQUA(KETQUA instance);
    partial void InsertKHOA(KHOA instance);
    partial void UpdateKHOA(KHOA instance);
    partial void DeleteKHOA(KHOA instance);
    partial void InsertKHOAHOC(KHOAHOC instance);
    partial void UpdateKHOAHOC(KHOAHOC instance);
    partial void DeleteKHOAHOC(KHOAHOC instance);
    partial void InsertLOP(LOP instance);
    partial void UpdateLOP(LOP instance);
    partial void DeleteLOP(LOP instance);
    partial void InsertMONHOC(MONHOC instance);
    partial void UpdateMONHOC(MONHOC instance);
    partial void DeleteMONHOC(MONHOC instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::NET_2001181272_HuynhThanhPhuong_T8.Properties.Settings.Default.QuanLySinhVienConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CHUONGTRINH> CHUONGTRINHs
		{
			get
			{
				return this.GetTable<CHUONGTRINH>();
			}
		}
		
		public System.Data.Linq.Table<SINHVIEN> SINHVIENs
		{
			get
			{
				return this.GetTable<SINHVIEN>();
			}
		}
		
		public System.Data.Linq.Table<GIANGKHOA> GIANGKHOAs
		{
			get
			{
				return this.GetTable<GIANGKHOA>();
			}
		}
		
		public System.Data.Linq.Table<KETQUA> KETQUAs
		{
			get
			{
				return this.GetTable<KETQUA>();
			}
		}
		
		public System.Data.Linq.Table<KHOA> KHOAs
		{
			get
			{
				return this.GetTable<KHOA>();
			}
		}
		
		public System.Data.Linq.Table<KHOAHOC> KHOAHOCs
		{
			get
			{
				return this.GetTable<KHOAHOC>();
			}
		}
		
		public System.Data.Linq.Table<LOP> LOPs
		{
			get
			{
				return this.GetTable<LOP>();
			}
		}
		
		public System.Data.Linq.Table<MONHOC> MONHOCs
		{
			get
			{
				return this.GetTable<MONHOC>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHUONGTRINH")]
	public partial class CHUONGTRINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MA_CHUONGTRINH;
		
		private string _TENCHUONGTRINH;
		
		private EntitySet<GIANGKHOA> _GIANGKHOAs;
		
		private EntitySet<LOP> _LOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMA_CHUONGTRINHChanging(string value);
    partial void OnMA_CHUONGTRINHChanged();
    partial void OnTENCHUONGTRINHChanging(string value);
    partial void OnTENCHUONGTRINHChanged();
    #endregion
		
		public CHUONGTRINH()
		{
			this._GIANGKHOAs = new EntitySet<GIANGKHOA>(new Action<GIANGKHOA>(this.attach_GIANGKHOAs), new Action<GIANGKHOA>(this.detach_GIANGKHOAs));
			this._LOPs = new EntitySet<LOP>(new Action<LOP>(this.attach_LOPs), new Action<LOP>(this.detach_LOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_CHUONGTRINH", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MA_CHUONGTRINH
		{
			get
			{
				return this._MA_CHUONGTRINH;
			}
			set
			{
				if ((this._MA_CHUONGTRINH != value))
				{
					this.OnMA_CHUONGTRINHChanging(value);
					this.SendPropertyChanging();
					this._MA_CHUONGTRINH = value;
					this.SendPropertyChanged("MA_CHUONGTRINH");
					this.OnMA_CHUONGTRINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENCHUONGTRINH", DbType="NVarChar(100)")]
		public string TENCHUONGTRINH
		{
			get
			{
				return this._TENCHUONGTRINH;
			}
			set
			{
				if ((this._TENCHUONGTRINH != value))
				{
					this.OnTENCHUONGTRINHChanging(value);
					this.SendPropertyChanging();
					this._TENCHUONGTRINH = value;
					this.SendPropertyChanged("TENCHUONGTRINH");
					this.OnTENCHUONGTRINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUONGTRINH_GIANGKHOA", Storage="_GIANGKHOAs", ThisKey="MA_CHUONGTRINH", OtherKey="MA_CHUONGTRINH")]
		public EntitySet<GIANGKHOA> GIANGKHOAs
		{
			get
			{
				return this._GIANGKHOAs;
			}
			set
			{
				this._GIANGKHOAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUONGTRINH_LOP", Storage="_LOPs", ThisKey="MA_CHUONGTRINH", OtherKey="MA_CHUONGTRINH")]
		public EntitySet<LOP> LOPs
		{
			get
			{
				return this._LOPs;
			}
			set
			{
				this._LOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GIANGKHOAs(GIANGKHOA entity)
		{
			this.SendPropertyChanging();
			entity.CHUONGTRINH = this;
		}
		
		private void detach_GIANGKHOAs(GIANGKHOA entity)
		{
			this.SendPropertyChanging();
			entity.CHUONGTRINH = null;
		}
		
		private void attach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.CHUONGTRINH = this;
		}
		
		private void detach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.CHUONGTRINH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SINHVIEN")]
	public partial class SINHVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MA_SINHVIEN;
		
		private string _HOTEN;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _DANTOC;
		
		private string _MALOP;
		
		private EntitySet<KETQUA> _KETQUAs;
		
		private EntityRef<LOP> _LOP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMA_SINHVIENChanging(string value);
    partial void OnMA_SINHVIENChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnDANTOCChanging(string value);
    partial void OnDANTOCChanged();
    partial void OnMALOPChanging(string value);
    partial void OnMALOPChanged();
    #endregion
		
		public SINHVIEN()
		{
			this._KETQUAs = new EntitySet<KETQUA>(new Action<KETQUA>(this.attach_KETQUAs), new Action<KETQUA>(this.detach_KETQUAs));
			this._LOP = default(EntityRef<LOP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_SINHVIEN", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MA_SINHVIEN
		{
			get
			{
				return this._MA_SINHVIEN;
			}
			set
			{
				if ((this._MA_SINHVIEN != value))
				{
					this.OnMA_SINHVIENChanging(value);
					this.SendPropertyChanging();
					this._MA_SINHVIEN = value;
					this.SendPropertyChanged("MA_SINHVIEN");
					this.OnMA_SINHVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(100)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DANTOC", DbType="NVarChar(20)")]
		public string DANTOC
		{
			get
			{
				return this._DANTOC;
			}
			set
			{
				if ((this._DANTOC != value))
				{
					this.OnDANTOCChanging(value);
					this.SendPropertyChanging();
					this._DANTOC = value;
					this.SendPropertyChanged("DANTOC");
					this.OnDANTOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOP", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MALOP
		{
			get
			{
				return this._MALOP;
			}
			set
			{
				if ((this._MALOP != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOPChanging(value);
					this.SendPropertyChanging();
					this._MALOP = value;
					this.SendPropertyChanged("MALOP");
					this.OnMALOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_KETQUA", Storage="_KETQUAs", ThisKey="MA_SINHVIEN", OtherKey="MA_SINHVIEN")]
		public EntitySet<KETQUA> KETQUAs
		{
			get
			{
				return this._KETQUAs;
			}
			set
			{
				this._KETQUAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_SINHVIEN", Storage="_LOP", ThisKey="MALOP", OtherKey="MA_LOP", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.SINHVIENs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.SINHVIENs.Add(this);
						this._MALOP = value.MA_LOP;
					}
					else
					{
						this._MALOP = default(string);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KETQUAs(KETQUA entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = this;
		}
		
		private void detach_KETQUAs(KETQUA entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIANGKHOA")]
	public partial class GIANGKHOA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MA_CHUONGTRINH;
		
		private string _MA_KHOA;
		
		private string _MA_MONHOC;
		
		private System.Nullable<int> _NAMHOC;
		
		private System.Nullable<int> _HOCKY;
		
		private System.Nullable<int> _SOTIETLYTHUYET;
		
		private System.Nullable<int> _SOTIETTHUCHANH;
		
		private System.Nullable<int> _SOTINCHI;
		
		private EntityRef<CHUONGTRINH> _CHUONGTRINH;
		
		private EntityRef<KHOA> _KHOA;
		
		private EntityRef<MONHOC> _MONHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMA_CHUONGTRINHChanging(string value);
    partial void OnMA_CHUONGTRINHChanged();
    partial void OnMA_KHOAChanging(string value);
    partial void OnMA_KHOAChanged();
    partial void OnMA_MONHOCChanging(string value);
    partial void OnMA_MONHOCChanged();
    partial void OnNAMHOCChanging(System.Nullable<int> value);
    partial void OnNAMHOCChanged();
    partial void OnHOCKYChanging(System.Nullable<int> value);
    partial void OnHOCKYChanged();
    partial void OnSOTIETLYTHUYETChanging(System.Nullable<int> value);
    partial void OnSOTIETLYTHUYETChanged();
    partial void OnSOTIETTHUCHANHChanging(System.Nullable<int> value);
    partial void OnSOTIETTHUCHANHChanged();
    partial void OnSOTINCHIChanging(System.Nullable<int> value);
    partial void OnSOTINCHIChanged();
    #endregion
		
		public GIANGKHOA()
		{
			this._CHUONGTRINH = default(EntityRef<CHUONGTRINH>);
			this._KHOA = default(EntityRef<KHOA>);
			this._MONHOC = default(EntityRef<MONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_CHUONGTRINH", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MA_CHUONGTRINH
		{
			get
			{
				return this._MA_CHUONGTRINH;
			}
			set
			{
				if ((this._MA_CHUONGTRINH != value))
				{
					if (this._CHUONGTRINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMA_CHUONGTRINHChanging(value);
					this.SendPropertyChanging();
					this._MA_CHUONGTRINH = value;
					this.SendPropertyChanged("MA_CHUONGTRINH");
					this.OnMA_CHUONGTRINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_KHOA", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MA_KHOA
		{
			get
			{
				return this._MA_KHOA;
			}
			set
			{
				if ((this._MA_KHOA != value))
				{
					if (this._KHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMA_KHOAChanging(value);
					this.SendPropertyChanging();
					this._MA_KHOA = value;
					this.SendPropertyChanged("MA_KHOA");
					this.OnMA_KHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_MONHOC", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MA_MONHOC
		{
			get
			{
				return this._MA_MONHOC;
			}
			set
			{
				if ((this._MA_MONHOC != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMA_MONHOCChanging(value);
					this.SendPropertyChanging();
					this._MA_MONHOC = value;
					this.SendPropertyChanged("MA_MONHOC");
					this.OnMA_MONHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAMHOC", DbType="Int")]
		public System.Nullable<int> NAMHOC
		{
			get
			{
				return this._NAMHOC;
			}
			set
			{
				if ((this._NAMHOC != value))
				{
					this.OnNAMHOCChanging(value);
					this.SendPropertyChanging();
					this._NAMHOC = value;
					this.SendPropertyChanged("NAMHOC");
					this.OnNAMHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOCKY", DbType="Int")]
		public System.Nullable<int> HOCKY
		{
			get
			{
				return this._HOCKY;
			}
			set
			{
				if ((this._HOCKY != value))
				{
					this.OnHOCKYChanging(value);
					this.SendPropertyChanging();
					this._HOCKY = value;
					this.SendPropertyChanged("HOCKY");
					this.OnHOCKYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOTIETLYTHUYET", DbType="Int")]
		public System.Nullable<int> SOTIETLYTHUYET
		{
			get
			{
				return this._SOTIETLYTHUYET;
			}
			set
			{
				if ((this._SOTIETLYTHUYET != value))
				{
					this.OnSOTIETLYTHUYETChanging(value);
					this.SendPropertyChanging();
					this._SOTIETLYTHUYET = value;
					this.SendPropertyChanged("SOTIETLYTHUYET");
					this.OnSOTIETLYTHUYETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOTIETTHUCHANH", DbType="Int")]
		public System.Nullable<int> SOTIETTHUCHANH
		{
			get
			{
				return this._SOTIETTHUCHANH;
			}
			set
			{
				if ((this._SOTIETTHUCHANH != value))
				{
					this.OnSOTIETTHUCHANHChanging(value);
					this.SendPropertyChanging();
					this._SOTIETTHUCHANH = value;
					this.SendPropertyChanged("SOTIETTHUCHANH");
					this.OnSOTIETTHUCHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOTINCHI", DbType="Int")]
		public System.Nullable<int> SOTINCHI
		{
			get
			{
				return this._SOTINCHI;
			}
			set
			{
				if ((this._SOTINCHI != value))
				{
					this.OnSOTINCHIChanging(value);
					this.SendPropertyChanging();
					this._SOTINCHI = value;
					this.SendPropertyChanged("SOTINCHI");
					this.OnSOTINCHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUONGTRINH_GIANGKHOA", Storage="_CHUONGTRINH", ThisKey="MA_CHUONGTRINH", OtherKey="MA_CHUONGTRINH", IsForeignKey=true)]
		public CHUONGTRINH CHUONGTRINH
		{
			get
			{
				return this._CHUONGTRINH.Entity;
			}
			set
			{
				CHUONGTRINH previousValue = this._CHUONGTRINH.Entity;
				if (((previousValue != value) 
							|| (this._CHUONGTRINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUONGTRINH.Entity = null;
						previousValue.GIANGKHOAs.Remove(this);
					}
					this._CHUONGTRINH.Entity = value;
					if ((value != null))
					{
						value.GIANGKHOAs.Add(this);
						this._MA_CHUONGTRINH = value.MA_CHUONGTRINH;
					}
					else
					{
						this._MA_CHUONGTRINH = default(string);
					}
					this.SendPropertyChanged("CHUONGTRINH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_GIANGKHOA", Storage="_KHOA", ThisKey="MA_KHOA", OtherKey="MA_KHOA", IsForeignKey=true)]
		public KHOA KHOA
		{
			get
			{
				return this._KHOA.Entity;
			}
			set
			{
				KHOA previousValue = this._KHOA.Entity;
				if (((previousValue != value) 
							|| (this._KHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOA.Entity = null;
						previousValue.GIANGKHOAs.Remove(this);
					}
					this._KHOA.Entity = value;
					if ((value != null))
					{
						value.GIANGKHOAs.Add(this);
						this._MA_KHOA = value.MA_KHOA;
					}
					else
					{
						this._MA_KHOA = default(string);
					}
					this.SendPropertyChanged("KHOA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_GIANGKHOA", Storage="_MONHOC", ThisKey="MA_MONHOC", OtherKey="MA_MONHOC", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.GIANGKHOAs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.GIANGKHOAs.Add(this);
						this._MA_MONHOC = value.MA_MONHOC;
					}
					else
					{
						this._MA_MONHOC = default(string);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KETQUA")]
	public partial class KETQUA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MA_SINHVIEN;
		
		private string _MA_MONHOC;
		
		private int _LANTHI;
		
		private System.Nullable<double> _DIEM;
		
		private EntityRef<SINHVIEN> _SINHVIEN;
		
		private EntityRef<MONHOC> _MONHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMA_SINHVIENChanging(string value);
    partial void OnMA_SINHVIENChanged();
    partial void OnMA_MONHOCChanging(string value);
    partial void OnMA_MONHOCChanged();
    partial void OnLANTHIChanging(int value);
    partial void OnLANTHIChanged();
    partial void OnDIEMChanging(System.Nullable<double> value);
    partial void OnDIEMChanged();
    #endregion
		
		public KETQUA()
		{
			this._SINHVIEN = default(EntityRef<SINHVIEN>);
			this._MONHOC = default(EntityRef<MONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_SINHVIEN", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MA_SINHVIEN
		{
			get
			{
				return this._MA_SINHVIEN;
			}
			set
			{
				if ((this._MA_SINHVIEN != value))
				{
					if (this._SINHVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMA_SINHVIENChanging(value);
					this.SendPropertyChanging();
					this._MA_SINHVIEN = value;
					this.SendPropertyChanged("MA_SINHVIEN");
					this.OnMA_SINHVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_MONHOC", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MA_MONHOC
		{
			get
			{
				return this._MA_MONHOC;
			}
			set
			{
				if ((this._MA_MONHOC != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMA_MONHOCChanging(value);
					this.SendPropertyChanging();
					this._MA_MONHOC = value;
					this.SendPropertyChanged("MA_MONHOC");
					this.OnMA_MONHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LANTHI", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LANTHI
		{
			get
			{
				return this._LANTHI;
			}
			set
			{
				if ((this._LANTHI != value))
				{
					this.OnLANTHIChanging(value);
					this.SendPropertyChanging();
					this._LANTHI = value;
					this.SendPropertyChanged("LANTHI");
					this.OnLANTHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIEM", DbType="Float")]
		public System.Nullable<double> DIEM
		{
			get
			{
				return this._DIEM;
			}
			set
			{
				if ((this._DIEM != value))
				{
					this.OnDIEMChanging(value);
					this.SendPropertyChanging();
					this._DIEM = value;
					this.SendPropertyChanged("DIEM");
					this.OnDIEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_KETQUA", Storage="_SINHVIEN", ThisKey="MA_SINHVIEN", OtherKey="MA_SINHVIEN", IsForeignKey=true)]
		public SINHVIEN SINHVIEN
		{
			get
			{
				return this._SINHVIEN.Entity;
			}
			set
			{
				SINHVIEN previousValue = this._SINHVIEN.Entity;
				if (((previousValue != value) 
							|| (this._SINHVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SINHVIEN.Entity = null;
						previousValue.KETQUAs.Remove(this);
					}
					this._SINHVIEN.Entity = value;
					if ((value != null))
					{
						value.KETQUAs.Add(this);
						this._MA_SINHVIEN = value.MA_SINHVIEN;
					}
					else
					{
						this._MA_SINHVIEN = default(string);
					}
					this.SendPropertyChanged("SINHVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_KETQUA", Storage="_MONHOC", ThisKey="MA_MONHOC", OtherKey="MA_MONHOC", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.KETQUAs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.KETQUAs.Add(this);
						this._MA_MONHOC = value.MA_MONHOC;
					}
					else
					{
						this._MA_MONHOC = default(string);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHOA")]
	public partial class KHOA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MA_KHOA;
		
		private string _TENKHOA;
		
		private System.Nullable<int> _NAMTHANLAP;
		
		private EntitySet<GIANGKHOA> _GIANGKHOAs;
		
		private EntitySet<LOP> _LOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMA_KHOAChanging(string value);
    partial void OnMA_KHOAChanged();
    partial void OnTENKHOAChanging(string value);
    partial void OnTENKHOAChanged();
    partial void OnNAMTHANLAPChanging(System.Nullable<int> value);
    partial void OnNAMTHANLAPChanged();
    #endregion
		
		public KHOA()
		{
			this._GIANGKHOAs = new EntitySet<GIANGKHOA>(new Action<GIANGKHOA>(this.attach_GIANGKHOAs), new Action<GIANGKHOA>(this.detach_GIANGKHOAs));
			this._LOPs = new EntitySet<LOP>(new Action<LOP>(this.attach_LOPs), new Action<LOP>(this.detach_LOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_KHOA", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MA_KHOA
		{
			get
			{
				return this._MA_KHOA;
			}
			set
			{
				if ((this._MA_KHOA != value))
				{
					this.OnMA_KHOAChanging(value);
					this.SendPropertyChanging();
					this._MA_KHOA = value;
					this.SendPropertyChanged("MA_KHOA");
					this.OnMA_KHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKHOA", DbType="NVarChar(100)")]
		public string TENKHOA
		{
			get
			{
				return this._TENKHOA;
			}
			set
			{
				if ((this._TENKHOA != value))
				{
					this.OnTENKHOAChanging(value);
					this.SendPropertyChanging();
					this._TENKHOA = value;
					this.SendPropertyChanged("TENKHOA");
					this.OnTENKHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAMTHANLAP", DbType="Int")]
		public System.Nullable<int> NAMTHANLAP
		{
			get
			{
				return this._NAMTHANLAP;
			}
			set
			{
				if ((this._NAMTHANLAP != value))
				{
					this.OnNAMTHANLAPChanging(value);
					this.SendPropertyChanging();
					this._NAMTHANLAP = value;
					this.SendPropertyChanged("NAMTHANLAP");
					this.OnNAMTHANLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_GIANGKHOA", Storage="_GIANGKHOAs", ThisKey="MA_KHOA", OtherKey="MA_KHOA")]
		public EntitySet<GIANGKHOA> GIANGKHOAs
		{
			get
			{
				return this._GIANGKHOAs;
			}
			set
			{
				this._GIANGKHOAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_LOP", Storage="_LOPs", ThisKey="MA_KHOA", OtherKey="MA_KHOA")]
		public EntitySet<LOP> LOPs
		{
			get
			{
				return this._LOPs;
			}
			set
			{
				this._LOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GIANGKHOAs(GIANGKHOA entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = this;
		}
		
		private void detach_GIANGKHOAs(GIANGKHOA entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = null;
		}
		
		private void attach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = this;
		}
		
		private void detach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHOAHOC")]
	public partial class KHOAHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MA_KHOAHOC;
		
		private System.Nullable<int> _NAMBATDAU;
		
		private System.Nullable<int> _NAMKETTHUC;
		
		private EntitySet<LOP> _LOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMA_KHOAHOCChanging(string value);
    partial void OnMA_KHOAHOCChanged();
    partial void OnNAMBATDAUChanging(System.Nullable<int> value);
    partial void OnNAMBATDAUChanged();
    partial void OnNAMKETTHUCChanging(System.Nullable<int> value);
    partial void OnNAMKETTHUCChanged();
    #endregion
		
		public KHOAHOC()
		{
			this._LOPs = new EntitySet<LOP>(new Action<LOP>(this.attach_LOPs), new Action<LOP>(this.detach_LOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_KHOAHOC", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MA_KHOAHOC
		{
			get
			{
				return this._MA_KHOAHOC;
			}
			set
			{
				if ((this._MA_KHOAHOC != value))
				{
					this.OnMA_KHOAHOCChanging(value);
					this.SendPropertyChanging();
					this._MA_KHOAHOC = value;
					this.SendPropertyChanged("MA_KHOAHOC");
					this.OnMA_KHOAHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAMBATDAU", DbType="Int")]
		public System.Nullable<int> NAMBATDAU
		{
			get
			{
				return this._NAMBATDAU;
			}
			set
			{
				if ((this._NAMBATDAU != value))
				{
					this.OnNAMBATDAUChanging(value);
					this.SendPropertyChanging();
					this._NAMBATDAU = value;
					this.SendPropertyChanged("NAMBATDAU");
					this.OnNAMBATDAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAMKETTHUC", DbType="Int")]
		public System.Nullable<int> NAMKETTHUC
		{
			get
			{
				return this._NAMKETTHUC;
			}
			set
			{
				if ((this._NAMKETTHUC != value))
				{
					this.OnNAMKETTHUCChanging(value);
					this.SendPropertyChanging();
					this._NAMKETTHUC = value;
					this.SendPropertyChanged("NAMKETTHUC");
					this.OnNAMKETTHUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOAHOC_LOP", Storage="_LOPs", ThisKey="MA_KHOAHOC", OtherKey="MA_KHOAHOC")]
		public EntitySet<LOP> LOPs
		{
			get
			{
				return this._LOPs;
			}
			set
			{
				this._LOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOAHOC = this;
		}
		
		private void detach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOAHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOP")]
	public partial class LOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MA_LOP;
		
		private string _MA_KHOAHOC;
		
		private string _MA_KHOA;
		
		private string _MA_CHUONGTRINH;
		
		private System.Nullable<int> _SOTHUTU;
		
		private EntitySet<SINHVIEN> _SINHVIENs;
		
		private EntityRef<CHUONGTRINH> _CHUONGTRINH;
		
		private EntityRef<KHOA> _KHOA;
		
		private EntityRef<KHOAHOC> _KHOAHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMA_LOPChanging(string value);
    partial void OnMA_LOPChanged();
    partial void OnMA_KHOAHOCChanging(string value);
    partial void OnMA_KHOAHOCChanged();
    partial void OnMA_KHOAChanging(string value);
    partial void OnMA_KHOAChanged();
    partial void OnMA_CHUONGTRINHChanging(string value);
    partial void OnMA_CHUONGTRINHChanged();
    partial void OnSOTHUTUChanging(System.Nullable<int> value);
    partial void OnSOTHUTUChanged();
    #endregion
		
		public LOP()
		{
			this._SINHVIENs = new EntitySet<SINHVIEN>(new Action<SINHVIEN>(this.attach_SINHVIENs), new Action<SINHVIEN>(this.detach_SINHVIENs));
			this._CHUONGTRINH = default(EntityRef<CHUONGTRINH>);
			this._KHOA = default(EntityRef<KHOA>);
			this._KHOAHOC = default(EntityRef<KHOAHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_LOP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MA_LOP
		{
			get
			{
				return this._MA_LOP;
			}
			set
			{
				if ((this._MA_LOP != value))
				{
					this.OnMA_LOPChanging(value);
					this.SendPropertyChanging();
					this._MA_LOP = value;
					this.SendPropertyChanged("MA_LOP");
					this.OnMA_LOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_KHOAHOC", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MA_KHOAHOC
		{
			get
			{
				return this._MA_KHOAHOC;
			}
			set
			{
				if ((this._MA_KHOAHOC != value))
				{
					if (this._KHOAHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMA_KHOAHOCChanging(value);
					this.SendPropertyChanging();
					this._MA_KHOAHOC = value;
					this.SendPropertyChanged("MA_KHOAHOC");
					this.OnMA_KHOAHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_KHOA", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MA_KHOA
		{
			get
			{
				return this._MA_KHOA;
			}
			set
			{
				if ((this._MA_KHOA != value))
				{
					if (this._KHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMA_KHOAChanging(value);
					this.SendPropertyChanging();
					this._MA_KHOA = value;
					this.SendPropertyChanged("MA_KHOA");
					this.OnMA_KHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_CHUONGTRINH", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MA_CHUONGTRINH
		{
			get
			{
				return this._MA_CHUONGTRINH;
			}
			set
			{
				if ((this._MA_CHUONGTRINH != value))
				{
					if (this._CHUONGTRINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMA_CHUONGTRINHChanging(value);
					this.SendPropertyChanging();
					this._MA_CHUONGTRINH = value;
					this.SendPropertyChanged("MA_CHUONGTRINH");
					this.OnMA_CHUONGTRINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOTHUTU", DbType="Int")]
		public System.Nullable<int> SOTHUTU
		{
			get
			{
				return this._SOTHUTU;
			}
			set
			{
				if ((this._SOTHUTU != value))
				{
					this.OnSOTHUTUChanging(value);
					this.SendPropertyChanging();
					this._SOTHUTU = value;
					this.SendPropertyChanged("SOTHUTU");
					this.OnSOTHUTUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_SINHVIEN", Storage="_SINHVIENs", ThisKey="MA_LOP", OtherKey="MALOP")]
		public EntitySet<SINHVIEN> SINHVIENs
		{
			get
			{
				return this._SINHVIENs;
			}
			set
			{
				this._SINHVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUONGTRINH_LOP", Storage="_CHUONGTRINH", ThisKey="MA_CHUONGTRINH", OtherKey="MA_CHUONGTRINH", IsForeignKey=true)]
		public CHUONGTRINH CHUONGTRINH
		{
			get
			{
				return this._CHUONGTRINH.Entity;
			}
			set
			{
				CHUONGTRINH previousValue = this._CHUONGTRINH.Entity;
				if (((previousValue != value) 
							|| (this._CHUONGTRINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUONGTRINH.Entity = null;
						previousValue.LOPs.Remove(this);
					}
					this._CHUONGTRINH.Entity = value;
					if ((value != null))
					{
						value.LOPs.Add(this);
						this._MA_CHUONGTRINH = value.MA_CHUONGTRINH;
					}
					else
					{
						this._MA_CHUONGTRINH = default(string);
					}
					this.SendPropertyChanged("CHUONGTRINH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_LOP", Storage="_KHOA", ThisKey="MA_KHOA", OtherKey="MA_KHOA", IsForeignKey=true)]
		public KHOA KHOA
		{
			get
			{
				return this._KHOA.Entity;
			}
			set
			{
				KHOA previousValue = this._KHOA.Entity;
				if (((previousValue != value) 
							|| (this._KHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOA.Entity = null;
						previousValue.LOPs.Remove(this);
					}
					this._KHOA.Entity = value;
					if ((value != null))
					{
						value.LOPs.Add(this);
						this._MA_KHOA = value.MA_KHOA;
					}
					else
					{
						this._MA_KHOA = default(string);
					}
					this.SendPropertyChanged("KHOA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOAHOC_LOP", Storage="_KHOAHOC", ThisKey="MA_KHOAHOC", OtherKey="MA_KHOAHOC", IsForeignKey=true)]
		public KHOAHOC KHOAHOC
		{
			get
			{
				return this._KHOAHOC.Entity;
			}
			set
			{
				KHOAHOC previousValue = this._KHOAHOC.Entity;
				if (((previousValue != value) 
							|| (this._KHOAHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOAHOC.Entity = null;
						previousValue.LOPs.Remove(this);
					}
					this._KHOAHOC.Entity = value;
					if ((value != null))
					{
						value.LOPs.Add(this);
						this._MA_KHOAHOC = value.MA_KHOAHOC;
					}
					else
					{
						this._MA_KHOAHOC = default(string);
					}
					this.SendPropertyChanged("KHOAHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SINHVIENs(SINHVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_SINHVIENs(SINHVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONHOC")]
	public partial class MONHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MA_MONHOC;
		
		private string _TENMONHOC;
		
		private string _MA_KHOA;
		
		private EntitySet<GIANGKHOA> _GIANGKHOAs;
		
		private EntitySet<KETQUA> _KETQUAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMA_MONHOCChanging(string value);
    partial void OnMA_MONHOCChanged();
    partial void OnTENMONHOCChanging(string value);
    partial void OnTENMONHOCChanged();
    partial void OnMA_KHOAChanging(string value);
    partial void OnMA_KHOAChanged();
    #endregion
		
		public MONHOC()
		{
			this._GIANGKHOAs = new EntitySet<GIANGKHOA>(new Action<GIANGKHOA>(this.attach_GIANGKHOAs), new Action<GIANGKHOA>(this.detach_GIANGKHOAs));
			this._KETQUAs = new EntitySet<KETQUA>(new Action<KETQUA>(this.attach_KETQUAs), new Action<KETQUA>(this.detach_KETQUAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_MONHOC", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MA_MONHOC
		{
			get
			{
				return this._MA_MONHOC;
			}
			set
			{
				if ((this._MA_MONHOC != value))
				{
					this.OnMA_MONHOCChanging(value);
					this.SendPropertyChanging();
					this._MA_MONHOC = value;
					this.SendPropertyChanged("MA_MONHOC");
					this.OnMA_MONHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENMONHOC", DbType="NVarChar(100)")]
		public string TENMONHOC
		{
			get
			{
				return this._TENMONHOC;
			}
			set
			{
				if ((this._TENMONHOC != value))
				{
					this.OnTENMONHOCChanging(value);
					this.SendPropertyChanging();
					this._TENMONHOC = value;
					this.SendPropertyChanged("TENMONHOC");
					this.OnTENMONHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_KHOA", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MA_KHOA
		{
			get
			{
				return this._MA_KHOA;
			}
			set
			{
				if ((this._MA_KHOA != value))
				{
					this.OnMA_KHOAChanging(value);
					this.SendPropertyChanging();
					this._MA_KHOA = value;
					this.SendPropertyChanged("MA_KHOA");
					this.OnMA_KHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_GIANGKHOA", Storage="_GIANGKHOAs", ThisKey="MA_MONHOC", OtherKey="MA_MONHOC")]
		public EntitySet<GIANGKHOA> GIANGKHOAs
		{
			get
			{
				return this._GIANGKHOAs;
			}
			set
			{
				this._GIANGKHOAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_KETQUA", Storage="_KETQUAs", ThisKey="MA_MONHOC", OtherKey="MA_MONHOC")]
		public EntitySet<KETQUA> KETQUAs
		{
			get
			{
				return this._KETQUAs;
			}
			set
			{
				this._KETQUAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GIANGKHOAs(GIANGKHOA entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_GIANGKHOAs(GIANGKHOA entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
		
		private void attach_KETQUAs(KETQUA entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_KETQUAs(KETQUA entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
	}
}
#pragma warning restore 1591
